#ifndef EVM_CONSTS_H
#define EVM_CONSTS_H

// EvmOpcodes enum taken from evm.h in radare2-extras (LGPL3 licensed)
typedef enum {
	EVM_OP_STOP = 0x00,
	EVM_OP_ADD,
	EVM_OP_MUL,
	EVM_OP_SUB,
	EVM_OP_DIV,
	EVM_OP_SDIV,
	EVM_OP_MOD,
	EVM_OP_SMOD,
	EVM_OP_ADDMOD,
	EVM_OP_MULMOD,
	EVM_OP_EXP,
	EVM_OP_SIGNEXTEND,

	EVM_OP_LT = 0x10,
	EVM_OP_GT,
	EVM_OP_SLT,
	EVM_OP_SGT,
	EVM_OP_EQ,
	EVM_OP_ISZERO,
	EVM_OP_AND,
	EVM_OP_OR,
	EVM_OP_XOR,
	EVM_OP_NOT,
	EVM_OP_BYTE,
	EVM_OP_SHL,
	EVM_OP_SHR,
	EVM_OP_SAR,
	EVM_OP_SHA3 = 0x20,

	EVM_OP_ADDRESS = 0x30,
	EVM_OP_BALANCE,
	EVM_OP_ORIGIN,
	EVM_OP_CALLER,
	EVM_OP_CALLVALUE,
	EVM_OP_CALLDATALOAD,
	EVM_OP_CALLDATASIZE,
	EVM_OP_CALLDATACOPY,
	EVM_OP_CODESIZE,
	EVM_OP_CODECOPY,
	EVM_OP_GASPRICE,
	EVM_OP_EXTCODESIZE,
	EVM_OP_EXTCODECOPY,
	EVM_OP_RETURNDATASIZE,
	EVM_OP_RETURNDATACOPY,
	EVM_OP_EXTCODEHASH,
	EVM_OP_BLOCKHASH,
	EVM_OP_COINBASE,
	EVM_OP_TIMESTAMP,
	EVM_OP_NUMBER,
	EVM_OP_DIFFICULTY,
	EVM_OP_GASLIMIT,
	EVM_OP_CHAINID,
	EVM_OP_SELFBALANCE,

	EVM_OP_POP = 0x50,
	EVM_OP_MLOAD,
	EVM_OP_MSTORE,
	EVM_OP_MSTORE8,
	EVM_OP_SLOAD,
	EVM_OP_SSTORE,
	EVM_OP_JUMP,
	EVM_OP_JUMPI,
	EVM_OP_PC,
	EVM_OP_MSIZE,
	EVM_OP_GAS,
	EVM_OP_JUMPDEST,

	EVM_OP_PUSH1 = 0x60,
	EVM_OP_PUSH2,
	EVM_OP_PUSH3,
	EVM_OP_PUSH4,
	EVM_OP_PUSH5,
	EVM_OP_PUSH6,
	EVM_OP_PUSH7,
	EVM_OP_PUSH8,
	EVM_OP_PUSH9,
	EVM_OP_PUSH10,
	EVM_OP_PUSH11,
	EVM_OP_PUSH12,
	EVM_OP_PUSH13,
	EVM_OP_PUSH14,
	EVM_OP_PUSH15,
	EVM_OP_PUSH16,
	EVM_OP_PUSH17,
	EVM_OP_PUSH18,
	EVM_OP_PUSH19,
	EVM_OP_PUSH20,
	EVM_OP_PUSH21,
	EVM_OP_PUSH22,
	EVM_OP_PUSH23,
	EVM_OP_PUSH24,
	EVM_OP_PUSH25,
	EVM_OP_PUSH26,
	EVM_OP_PUSH27,
	EVM_OP_PUSH28,
	EVM_OP_PUSH29,
	EVM_OP_PUSH30,
	EVM_OP_PUSH31,
	EVM_OP_PUSH32,
	EVM_OP_DUP1,
	EVM_OP_DUP2,
	EVM_OP_DUP3,
	EVM_OP_DUP4,
	EVM_OP_DUP5,
	EVM_OP_DUP6,
	EVM_OP_DUP7,
	EVM_OP_DUP8,
	EVM_OP_DUP9,
	EVM_OP_DUP10,
	EVM_OP_DUP11,
	EVM_OP_DUP12,
	EVM_OP_DUP13,
	EVM_OP_DUP14,
	EVM_OP_DUP15,
	EVM_OP_DUP16,
	EVM_OP_SWAP1,
	EVM_OP_SWAP2,
	EVM_OP_SWAP3,
	EVM_OP_SWAP4,
	EVM_OP_SWAP5,
	EVM_OP_SWAP6,
	EVM_OP_SWAP7,
	EVM_OP_SWAP8,
	EVM_OP_SWAP9,
	EVM_OP_SWAP10,
	EVM_OP_SWAP11,
	EVM_OP_SWAP12,
	EVM_OP_SWAP13,
	EVM_OP_SWAP14,
	EVM_OP_SWAP15,
	EVM_OP_SWAP16,

	EVM_OP_LOG0 = 0xa0,
	EVM_OP_LOG1,
	EVM_OP_LOG2,
	EVM_OP_LOG3,
	EVM_OP_LOG4,

	EVM_OP_CREATE = 0xf0,
	EVM_OP_CALL,
	EVM_OP_CALLCODE,
	EVM_OP_RETURN,
	EVM_OP_DELEGATECALL,
	EVM_OP_CREATE2,
	EVM_OP_STATICCALL = 0xfa,
	EVM_OP_REVERT = 0xfd,
	EVM_OP_INVALID,
	EVM_OP_SELFDESTRUCT
} EvmOpcodes;

// These constants based on from evm.c in radare2-extras (LGPL3 licensed)
const char *opnames[256] = {
    [EVM_OP_STOP] = "stop",
    [EVM_OP_ADD] = "add",
    [EVM_OP_MUL] = "mul",
    [EVM_OP_SUB] = "sub",
    [EVM_OP_DIV] = "div",
    [EVM_OP_SDIV] = "sdiv",
    [EVM_OP_MOD] = "mod",
    [EVM_OP_SMOD] = "smod",
    [EVM_OP_ADDMOD] = "addmod",
    [EVM_OP_MULMOD] = "mulmod",
    [EVM_OP_EXP] = "exp",
    [EVM_OP_SIGNEXTEND] = "signextend",
    [EVM_OP_LT] = "lt",
    [EVM_OP_GT] = "gt",
    [EVM_OP_SLT] = "slt",
    [EVM_OP_SGT] = "sgt",
    [EVM_OP_EQ] = "eq",
    [EVM_OP_ISZERO] = "iszero",
    [EVM_OP_AND] = "and",
    [EVM_OP_OR] = "or",
    [EVM_OP_XOR] = "xor",
    [EVM_OP_NOT] = "not",
    [EVM_OP_BYTE] = "byte",
    [EVM_OP_SHL] = "shl",
    [EVM_OP_SHR] = "shr",
    [EVM_OP_SAR] = "sar",
    [EVM_OP_SHA3] = "sha3",
    [EVM_OP_ADDRESS] = "address",
    [EVM_OP_BALANCE] = "balance",
    [EVM_OP_ORIGIN] = "origin",
    [EVM_OP_CALLER] = "caller",
    [EVM_OP_CALLVALUE] = "callvalue",
    [EVM_OP_CALLDATALOAD] = "calldataload",
    [EVM_OP_CALLDATASIZE] = "calldatasize",
    [EVM_OP_CALLDATACOPY] = "calldatacopy",
    [EVM_OP_CODESIZE] = "codesize",
    [EVM_OP_CODECOPY] = "codecopy",
    [EVM_OP_GASPRICE] = "gasprice",
    [EVM_OP_EXTCODESIZE] = "extcodesize",
    [EVM_OP_EXTCODECOPY] = "extcodecopy",
    [EVM_OP_RETURNDATASIZE] = "returndatasize",
    [EVM_OP_RETURNDATACOPY] = "returndatacopy",
    [EVM_OP_EXTCODEHASH] = "extcodehash",
    [EVM_OP_BLOCKHASH] = "blockhash",
    [EVM_OP_COINBASE] = "coinbase",
    [EVM_OP_TIMESTAMP] = "timestamp",
    [EVM_OP_NUMBER] = "number",
    [EVM_OP_DIFFICULTY] = "difficulty",
    [EVM_OP_GASLIMIT] = "gaslimit",
    [EVM_OP_CHAINID] = "chainid",
    [EVM_OP_SELFBALANCE] = "selfbalance",
    [EVM_OP_POP] = "pop",
    [EVM_OP_MLOAD] = "mload",
    [EVM_OP_MSTORE] = "mstore",
    [EVM_OP_MSTORE8] = "mstore8",
    [EVM_OP_SLOAD] = "sload",
    [EVM_OP_SSTORE] = "sstore",
    [EVM_OP_JUMP] = "jump",
    [EVM_OP_JUMPI] = "jumpi",
    [EVM_OP_PC] = "pc",
    [EVM_OP_MSIZE] = "msize",
    [EVM_OP_GAS] = "gas",
    [EVM_OP_JUMPDEST] = "jumpdest",
    // ....
    [EVM_OP_CREATE] = "create",
    [EVM_OP_CALL] = "call",
    [EVM_OP_CALLCODE] = "callcode",
    [EVM_OP_RETURN] = "return",
    [EVM_OP_DELEGATECALL] = "delegatecall",
    [EVM_OP_CREATE2] = "create2",
    [EVM_OP_STATICCALL] = "staticcall",
    [EVM_OP_REVERT] = "revert",
    [EVM_OP_INVALID] = "invalid",
    [EVM_OP_SELFDESTRUCT] = "selfdestruct",
};

#endif /* EVM_CONSTS_H */
